services:
    bot:
        container_name: test-bot
        build: .
        volumes:
            - .:/app
        command: sh -c "cd src && python bot.py"
        env_file:
            - .env
        depends_on:
            - backend
        restart: unless-stopped
    
    backend:
        container_name: test-backend
        build: .
        entrypoint:  sh src/backend_entrypoint.sh
        ports:
            - "8000:8000"
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        restart: unless-stopped

    db:
        image: postgres:17.2-alpine
        container_name: test-db
        env_file:
            - .env
        volumes:
            - db_data:/data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U$$POSTGRES_USER -d$$POSTGRES_DB"]
            interval: 1s
            timeout: 5s
            retries: 10
        restart: unless-stopped

    redis:
        image: redis:7.4.2-alpine
        container_name: test-redis
        env_file:
            - .env
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD-SHELL", "redis-cli", "--raw", "incr", "ping"]
            interval: 1s
            timeout: 5s
            retries: 10
        restart: unless-stopped

volumes:
    db_data:
    redis_data:
